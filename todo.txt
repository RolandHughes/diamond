file:///home/roland/CopperSpice/html/class_qregularexpression.html

*) Create class containing all of the QStringLists for syntax patterns. Use it as data portion of a QMap keyed by the text we use to identify a specific syntaxt.

*) Overlord now must provide a method that is called passing said key. If the syntax patterns have not been loaded, it loads them and adds an entry to the map before returning a reference to the class instance.

*) See if Overlord could be put in its own thread.

*) find out why connecting a settings signal from dialog_colors to current tab causes crash. I suspect my dynamic_cast<> failed for some reason and the connect() statement didn't complain about a null.

*) file selector called by File->Open needs to allow for hidden files.
   File feature request with CopperSpice

*) Fix current line highlight to only change background

*) add regular expression to C/C++ definition for numeric constant

*) create EDT Help dialog

*) Add support for EDT keypad

*) Need EDT command dialog

*) Find a way to make syntax highlighting faster. Too much lag between "broadcasting settings" and screen update with multi-thousand line files.


*) Should not be nuking/skipping empty tab at startup if there is any file name in the list.
*) File->New should not be whacking the current file tab, it should create a new
 tab
 
*) test out macro save/load/use. I really butchered that.







*) Read up on Doxyprint to see if it mimics Doxygen comments.
    If it is like Doxygen,

*) add support for EDT direction lock

*) add support for EDT commands
    S|some-text|new-text|sel   wh  rest
    INC file.name =buff-name
    INC file.name
    WRITE   (log into Eisner and verify WRITE options)
    EXIT
    QUIT
    See what other EDT and LSE commands are worth adding.
    LINE 9999
    Really like GOLD= for "goto line"
    See what else is worth saving from Emacs EDT.
    Probably GOLD-C for copy?

*) research regular expression for string of numbers.
    add to each of the syn_xxxx.json files
    add support for new JSON class in Syntax::processSyntax()

*) read documentation for QSyntaxHighlighter in CopperSpice
   see if there is any support for "matching" {(<
   if so add option to turn on "matching" highlight


