file:///home/roland/CopperSpice/html/class_qregularexpression.html

*) try hard coding syntax highlighting for numbers. See if we can get one of the stolen things to work.

*) themes in settings is walking on stuff behind it in RAM. At least it looks like that when these fields came after.
    QString         m_edtLastDeletedWord;
    QString         m_edtLastDeletedLine;
    QString         m_edtLastDeletedChar;
   m_edtLastDeletedLine got huge quantities of garbage in it. Odd because m_edtLastDeletedWord was fine
   Might have nothing to do with it at all. Last deleted line might have had regular expression stuff that hosed things.

*) Change file open dialog to use system instead of Qt.

*) Move comment syntax highlighting into each syntax file. This is prep work for supporting COBOL, FORTRAN, etc.

*) Take another stab at Themes as pointers. When copying the QMap need to create new objects. When comparing QMap need to compare value-at


*) Fix macro save - make it actually happen - test create-use-save-reload of macros
    from menu_action.cpp
    m_textEdit->macroStart();
    m_textEdit->macroStop();
        // save macro to global list
        m_macroList = m_textEdit->get_MacroKeyList();
    Global list should now be in Settings. Only the global list should be saved and loaded.
    EDT keys might need some work to be part of macro.

*) test out macro save/load/use. I really butchered that.


*) Each Theme should provide its own colors for selected text
    QPalette roles
    QPalette::Highlight
    QPalette::HighlightedText


*) read documentation for QSyntaxHighlighter in CopperSpice
   see if there is any support for "matching" {(<
   if so add option to turn on "matching" highlight
    ~/Downloads/qq31-parenthesis.zip  source code for QtQuarterly31.pdf shows how to do parentesis matching. Should be able to expand to handle <> [] {} as well as ()

*) Create an RPM
*) See if Fedora allows me to create a Snap container.

*) DEL L does not work on wrapped line or very last line of file. Need to look into that.

*) Make EDT Prompt appear at bottom of Window and be modal.

*) EDT keys don't seem to always work in split window/frame - should be fixed by CsPlainTextEditor class creation.

*) Need to be able to show FF character. It gets inserted, but does not show.  This will require gutting QPlainTextEdit I think. Need to see how it shows spaces and tabs and add this feature to CsPlainTextEditor class.


*) add support for EDT commands
    S|some-text|new-text|sel   wh  rest
    INC file.name =buff-name
    INC file.name
    WRITE file.name [range] | ALL | SELECT
    EXIT
    QUIT
    See what other EDT and LSE commands are worth adding.
    LINE 9999
    SUBSTITUTE   /QUERY   WHOLE | REST | BEFORE | SELECTION
    probably add Astyle command

*) ANSI COBOL, FORTRAN IV, FORTRAN 77, DEC BASIC, and most other large installed base languages DO NOT support
 // or /* */ for comments. That part of Syntax Highlighting must be moved to the
 patters. For COBOL a comment is * in column 7 when using 72-column CARD format
 or as the first character in a line when using "free" format. Pick up a copy of
 "The Minimum You Need to Know to Be an OpenVMS Application Developer" to learn
 more about other languages.

*) It would be nice to support a user supplied tab stop list so the editor could support COBOL, FORTRAN, and several other
   languages. Old FORTRAN had very specific column for comment start. ANSI COBOL starts AREA-B in column 8 with the
   continuation/comment indicator in column 7. Columns 73-80 are additinoal ignored comments.

*) Get ^M substitution working for EDT search. The problem isn't the substitution. The problem is the "blocks" in QPlainTextEdit. The new line character isn't in the actual text. Have to write a custom search that looks for a block starting with everything after ^M and then checks the end of the preceeding block to see that it matches.



=====

roland@roland-amd-desktop:~/Projects/diamond_debug$ du -ks
146632	.

roland@roland-amd-desktop:~$ du -sk Projects/diamond_debug
146632	Projects/diamond_debug

diamond_build/src/diamond_build_info.h

constexpr const char *versionString = "1.3.4";

need to grep for *versionString then sed to chop everything after = and remove quotes along with ;. That value needs to be thumped into the Version: line of control.

re='^[0-9]+$'
if [[ $version =~ $re ]] ; then
    sed -i "s/Version: .*/Version: ${version}/g" build.etc/control
    if [ $? -ne 0 ]; then
    	echo "Replace version string in control file failed"
    	exit 1
    fi
fi
